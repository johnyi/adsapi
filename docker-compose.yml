version: "3"

services:
    api:
        container_name: ${API_CONTAINER_NAME}
        image: ${API_IMAGE_NAME}
        build:
            context: ./api
        volumes:
            - ./api/src:/var/www/html
            - ${LOG}/php:/var/log
            - /var/www/html/vendor
        networks:
          - default
        ports:
            - "${API_PORT}:9000"
        depends_on:
            - postgres
            - redis
    nginx:
        container_name: ${NGINX_CONTAINER_NAME}
        image: ${NGINX_IMAGE_NAME}
        build:
            context: ./nginx
        volumes:
            - ./api/src:/var/www/html
            - ${LOG}/nginx:/var/log/nginx
        networks:
          - default
          - outside
        ports:
            - "${NGINX_PORT}:80"
        depends_on:
            - api
    postgres:
        container_name: ${POSTGRES_CONTAINER_NAME}
        image: ${POSTGRES_IMAGE_NAME}
        build:
            context: ./postgres
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - TZ=${POSTGRES_TIMEZONE}
        volumes:
            - ${DATA}/${ENV}/postgres:/var/lib/postgresql/data
        networks:
          - default
        ports:
            - "${POSTGRES_PORT}:5432"
    redis:
        container_name: ${REDIS_CONTAINER_NAME}
        image: ${REDIS_IMAGE_NAME}
        build:
            context: ./redis
            args:
                - REDIS_PASSWORD=${REDIS_PASSWORD}
        volumes:
            - ${DATA}/${ENV}/redis:/data
        networks:
          - default
        ports:
            - "${REDIS_PORT}:6379"
    adminer:
        container_name: ${ADMINER_CONTAINER_NAME}
        image: ${ADMINER_IMAGE_NAME}
        build:
            context: ./adminer
        ports:
            - "${ADMINER_PORT}:8080"
networks:
    default:
        driver: bridge
    outside:
        external:
            name: adsapi_external
